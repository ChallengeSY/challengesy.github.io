<!DOCTYPE html>
<html lang="en">
<head>
	<meta name="description" content="JavaScript solitaire games" />
	<meta name="keywords" content="Series" />
	<meta name="author" content="Paul Ruediger" />
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
	
	<title>CSSol Series Play</title>

	<link type="text/css" href="../scripts/cards.css" rel="stylesheet" />
	<link type="image/x-icon" href="../cssol.ico" rel="icon" />
	<script type="text/javascript" src="../scripts/common.js"></script>
	<script type="text/javascript" src="../scripts/homepiles.js"></script>
	<script type="text/javascript" src="../scripts/reserve.js"></script>
	<script type="text/javascript" src="../scripts/wizard.js"></script>
	<script type="text/javascript" src="../scripts/series.js"></script>
	<script type="text/javascript" src="../../quickGet.js"></script>
	<script type="text/javascript">
	if (getParam("newSkill") != -1) {
		seriesGame = 1;
		seriesDiff = parseInt(getParam("newSkill"));
		if (seriesDiff < 4) {
			seriesLives = 3;
		} else {
			seriesLives = 1;
		}
		seriesScore = 0;
	} else {
		loadSeriesFile();
	}
	
	// Highly dynamic script, changes as the series progresses
	wizardDecks = 1;
	scoringModel = "buildUpSuit";
	setBaseRank("Ace");
	var allowAutobuild = true;
	startingCards = 0;
	
	// Tableau Settings
	emptyPileRefills = "finalRank";
	maxRedeals = 0;
	prefilledReserve = 0;
	deckCost = 52;
	switch (seriesGame) {
		case 1:
			// Klondike
			tableauStructure = [1,2,3,4,5,6,7];
			downturnDepth = [6];
			tableauMovement = "builds";
			maxRedeals = -1;
			deckCost = 28;
			break;
			
		case 2:
			// Yukon
			tableauStructure = [1,6,7,8,9,10,11];
			downturnDepth = [0,1,2,3,4,5,6];
			tableauMovement = "yukonStyle";
			break;
			
		default:
			// Raglan
			tableauStructure = [1,2,3,4,5,6,7,7,7];
			downturnDepth = [0];
			tableauMovement = "oneCard";
			emptyPileRefills = "anyCard";
			prefilledReserve = 6;
			startingCards = 4;
			break;
	}
	tableauWidth = tableauStructure.length;
	tableauShape = -1;
	tableauDepth = Math.max(...tableauStructure);

	tableauBuilding = "downColorAlt";
	emptyAutoRefills = 0;

	// Auxillary Settings
	stockDealTo = 0;
	wasteDealBy = 1;
	maxReserve = 0;
	
	function changeDiff(firstTime) {
		// Not available for Solitaire Series
	}
	</script>
</head>
<body>
<p id="banner"><a href="../index.htm"><img src="../gfx/banner.png" alt="" /></a></p>
<div id="tableau">
	<div id="commandPanel"><input id="newGame" class="button" type="button" value="Finish game" onclick="finishSeriesGame()" title="Records the current game into the series system" />
	<input id="restartGame" class="button" type="button" value="Restart game" onclick="restartGame(false)" title="Restarts the game using the same password" />
	<input id="autoBuild" class="button" type="button" value="Autobuild" onclick="autoFinish()" title="Automatically builds foundations where possible" />
	<input id="helpButton" class="button" type="button" value="Show help" onclick="toggleHelp(false)" title="Toggles game instructions" />
	<br />Current Score: <span id="casualScore">0</span>
	&mdash; Series Score: $<span id="seriesScore">0</span>
	&mdash; Lives: <span id="seriesLives">0</span>
	<input id="password" type="hidden" />
	</div>

	<!-- Playfield elements will be made here -->
</div>

<p id="statusBar"></p>

<div id="helpPanel">
<h2>Instructions</h2>
<p>Solitaire Series is a series of 3 games played back to back (Klondike &rarr; Yukon &rarr; Raglan), with a total score and lives tracked as the series progreses. A series is successful if all 3 games are finished, and ends in a failure if lives are all exhausted.</p>

<h3>Scoring</h3>
<p>Points are awarded for each card secured, times the number of lives available (with the maximum lives being used if playing on Hardcore). This means if losses are incurred while playing on Regular or Fanatic, the score is reduced accordingly based on lives lost.</p>

<h3>Skill Levels</h3>

<ol>
<li><b>Casual</b>: Simply move onto the next game in the series, whether win or loss. Lives are not subtracted for losses, and points are still banked for each game finished</li>
<li><b>Regular</b>: Each game must be won before the series can progress. Lives are finite, but are fully replenished with each win, and with the maximum capacity increasing by one life</li>
<li><b>Fanatic</b>: Lives are very finite; one life is given after each win</li>
<li><b>Hardcore</b>: One life is all that is provided to conquer the entire series! It is impossibled to earn more</li>
</ol>
</div>

</body>
</html>
